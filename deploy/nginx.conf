# deploy/nginx.conf  -> 映射到 /etc/nginx/conf.d/default.conf
# 注意：本文件被包含进 http{} 作用域，不能写 worker_processes/http/events

# 让 Nginx 解析 Docker 内部 DNS
resolver 127.0.0.11 ipv6=off valid=10s;

# WebSocket 连接头
map $http_upgrade $connection_upgrade {
  default     upgrade;
  ''          close;
}

# ---------- 上游 ----------
upstream chat_http {
  server chat1:8080;
  server chat2:8080;
  server chat3:8080;
}

upstream chat_ws {
  # 为 socket.io 启用会话黏性（按客户端 IP）
  hash $remote_addr consistent;
  server chat1:9092;
  server chat2:9092;
  server chat3:9092;
}

# ---------- 服务器：对外 80 ----------
server {
  listen 80;

  # 页面/REST
  location / {
    proxy_pass http://chat_http;
    proxy_set_header Host              $host;
    proxy_set_header X-Real-IP         $remote_addr;
    proxy_set_header X-Forwarded-For   $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
  }

  # /socket.io 与 /api/socket.io
  location ^~ /socket.io/ {
    proxy_pass http://chat_ws;
    proxy_http_version 1.1;
    proxy_set_header Upgrade           $http_upgrade;
    proxy_set_header Connection        $connection_upgrade;
    proxy_set_header X-Real-IP         $remote_addr;
    proxy_set_header X-Forwarded-For   $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_read_timeout 600s; proxy_send_timeout 600s;
    proxy_buffering off;
  }
  location ^~ /api/socket.io/ {
    rewrite ^/api/(.*)$ /$1 break;
    proxy_pass http://chat_ws;
    proxy_http_version 1.1;
    proxy_set_header Upgrade           $http_upgrade;
    proxy_set_header Connection        $connection_upgrade;
    proxy_set_header X-Real-IP         $remote_addr;
    proxy_set_header X-Forwarded-For   $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_read_timeout 600s; proxy_send_timeout 600s;
    proxy_buffering off;
  }

  # 固定到 chat1
  location ^~ /c1/ { rewrite ^/c1/(.*)$ /$1 break; proxy_pass http://chat1:8080; }
  location ^~ /c1/socket.io/ {
    rewrite ^/c1/(.*)$ /$1 break;
    proxy_pass http://chat1:9092;
    proxy_http_version 1.1;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection $connection_upgrade;
    proxy_read_timeout 600s; proxy_send_timeout 600s;
    proxy_buffering off;
  }
  location ^~ /c1/api/socket.io/ {
    rewrite ^/c1/api/(.*)$ /$1 break;
    proxy_pass http://chat1:9092;
    proxy_http_version 1.1;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection $connection_upgrade;
    proxy_read_timeout 600s; proxy_send_timeout 600s;
    proxy_buffering off;
  }

  # 固定到 chat2（同理）
  location ^~ /c2/ { rewrite ^/c2/(.*)$ /$1 break; proxy_pass http://chat2:8080; }
  location ^~ /c2/socket.io/ {
    rewrite ^/c2/(.*)$ /$1 break;
    proxy_pass http://chat2:9092;
    proxy_http_version 1.1;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection $connection_upgrade;
    proxy_read_timeout 600s; proxy_send_timeout 600s;
    proxy_buffering off;
  }
  location ^~ /c2/api/socket.io/ {
    rewrite ^/c2/api/(.*)$ /$1 break;
    proxy_pass http://chat2:9092;
    proxy_http_version 1.1;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection $connection_upgrade;
    proxy_read_timeout 600s; proxy_send_timeout 600s;
    proxy_buffering off;
  }

  # 健康检查
  location = /nginx-health { return 200 'ok'; add_header Content-Type text/plain; }
}

# ---------- 服务器：可选的 9090（仅 WS 压测口） ----------
server {
  listen 9090;
  location ^~ /socket.io/ {
    proxy_pass http://chat_ws;
    proxy_http_version 1.1;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection $connection_upgrade;
    proxy_read_timeout 600s; proxy_send_timeout 600s;
    proxy_buffering off;
  }
}